service: app-manager-serverless
package:
  patterns:
    - '!files-repository/**'
    - '!uploads/**'
provider:
  name: aws
  environment:
    NODE_ENV: 'production'
    MONGODB_URL: 'mongodb+srv://user:password@cluster0.smxxf.mongodb.net/appmgrdb?retryWrites=true&w=majority'
    JWT_SECRET: 'thisisasamplesecret'
    JWT_ACCESS_EXPIRATION_MINUTES: 30
    JWT_REFRESH_EXPIRATION_DAYS: 30
    JWT_RESET_PASSWORD_EXPIRATION_MINUTES: 10
    JWT_VERIFY_EMAIL_EXPIRATION_MINUTES: 10
    IS_SLS: true

    # File Mgr
    FILES_REPOSITORY_HOST: 'https://xxxxxxxxxx.cloudfront.net'
    CLIENT_UPLOAD_METHOD: 'S3'
    IS_FILES_REPO_S3: 'true'
    TMP_UPLOADS_DIR: '../../tmp/uploads'
    FILES_REPO_DIR: '../../tmp/files-repository'
    SLS_TMP_PREFIX: '../../'
    # AWS
    AWS_S3_BUCKET_TMP_UPLOAD: 'AWS_S3_BUCKET_TMP_UPLOAD'
    AWS_S3_BUCKET_REPO: 'AWS_S3_BUCKET_REPO'
    AWS_S3_BUCKET_REPO_FOLDER_PREFIX: 'files-repository'
    AWS_S3_REGION: 'AWS_S3_REGION'
    AWS_S3_ACCESS_KEY: 'AWS_S3_ACCESS_KEY'
    AWS_S3_SECRET_ACCESS_KEY: 'AWS_S3_SECRET_ACCESS_KEY'
    # Content Protection
    CONTENT_PROTECTION_SECRET: 'xxxxxxxxxxxxx'
    CONTENT_PROTECTION_SECRET_IV: 'xxxxxxxxxxxxxxxxxxxxxxxxxxx'
  runtime: nodejs14.x
  stage: dev
  region: us-east-1
  memorySize: 2048
  timeout: 30
  httpApi:
    cors: true
functions:
  app:
    handler: serverlessHandler.handler
    events:
      - http:
          path: /
          method: ANY
          cors: true
      - http:
          path: /{proxy+}
          method: ANY
          cors: true
plugins:
  - serverless-offline
custom:
  serverless-offline:
    httpPort: 3005
